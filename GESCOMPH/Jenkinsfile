/// <summary>
/// Jenkinsfile principal para despliegue automatizado del proyecto ANPR Vision.
/// Este pipeline detecta el entorno desde Api/.env,
/// compila el proyecto .NET 9 y ejecuta el docker-compose correspondiente dentro de la carpeta DevOps/{entorno}.
/// </summary>

pipeline {
    agent any

    environment {
        DOTNET_CLI_HOME = 'C:\\jenkins\\.dotnet'
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'
        DOTNET_NOLOGO = '1'
    }

    stages {

        stage('Leer entorno desde GESCOMPH/.env') {
            steps {
                dir('GESCOMPH') {
                    script {
                        // ‚úÖ Leemos el ENVIRONMENT correctamente con PowerShell
                        def envValue = powershell(
                            script: "(Get-Content .env | Where-Object { \$_ -match '^ENVIRONMENT=' }) -replace '^ENVIRONMENT=', ''",
                            returnStdout: true
                        ).trim()

                        if (!envValue) {
                            error "‚ùå No se encontr√≥ ENVIRONMENT en GESCOMPH/.env"
                        }

                        env.ENVIRONMENT = envValue
                        env.ENV_DIR = "DevOps/${env.ENVIRONMENT}"
                        env.COMPOSE_FILE = "${env.ENV_DIR}/docker-compose.yml"
                        env.ENV_FILE = "${env.ENV_DIR}/.env"

                        echo "‚úÖ Entorno detectado: ${env.ENVIRONMENT}"
                        echo "üìÑ Archivo compose: ${env.COMPOSE_FILE}"
                        echo "üìÅ Archivo de entorno: ${env.ENV_FILE}"
                    }
                }
            }
        }

        stage('Restaurar dependencias') {
            steps {
                dir('GESCOMPH') {
                    bat '''
                        echo Restaurando dependencias .NET...
                        if not exist "C:\\jenkins\\dotnet" mkdir "C:\\jenkins\\dotnet"
                        dotnet restore Web\\Web.csproj
                    '''
                }
            }
        }

        stage('Compilar proyecto') {
            steps {
                dir('GESCOMPH') {
                    echo '‚öôÔ∏è Compilando la soluci√≥n ANPR Vision...'
                    bat 'dotnet build Web\\Web.csproj --configuration Release'
                }
            }
        }

        stage('Publicar y construir imagen Docker') {
            steps {
                dir('GESCOMPH') {
                    echo "üê≥ Construyendo imagen Docker para ANPR Vision (${env.ENVIRONMENT})"
                    bat "docker build -t anpr-vision-${env.ENVIRONMENT}:latest -f Dockerfile ."
                }
            }
        }

        stage('Desplegar GESCOMPH') {
            steps {
                dir('GESCOMPH') {
                    echo "üöÄ Desplegando ANPR Vision para entorno: ${env.ENVIRONMENT}"
                    bat "docker compose -f ${env.COMPOSE_FILE} --env-file ${env.ENV_FILE} up -d --build"
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Despliegue completado correctamente para ${env.ENVIRONMENT}"
        }
        failure {
            echo "üí• Error durante el despliegue en ${env.ENVIRONMENT}"
        }
    }
}
