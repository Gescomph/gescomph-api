version: '3.8'

services:
  # üóÑÔ∏è SQL Server - QA
  gescomph-sqlserver-qa:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: gescomph-sqlserver-qa
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Admin123!"
      MSSQL_PID: "Developer"
    # Healthcheck para garantizar disponibilidad antes de la API
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "Admin123!", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - "1434:1433" # Puerto externo √∫nico para QA
    volumes:
      - sqldata_qa:/var/opt/mssql
    networks:
      - network_qa

  # üåê API principal - QA
  gescomph-api-qa:
    container_name: gescomph-api-qa
    build:
      context: ../..
      dockerfile: WebGESCOMPH/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      gescomph-sqlserver-qa:
        condition: service_healthy
    ports:
      - "5101:8080"
    networks:
      - network_qa
    labels:
      - com.gescomph.environment=qa

volumes:
  sqldata_qa:

networks:
  network_qa:
    driver: bridge
